
@page "/empresas"
@using Dtos.Empresa
@inject HttpClient Http
@inject NavigationManager Navigation
@inject IJSRuntime JavaScript

<PageTitle>Empresa</PageTitle>

<h3 class="text-2x1 font-bold text-zinc-900">Empresas Cadastradas</h3>

 <div class="flex justify-end">
  <a href="/empresa/adicionar" class="not-prose cef-add-button">
    <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
    <path stroke-linecap="round" stroke-linejoin="round" d="M12 6v6m0 0v6m0-6h6m-6 0H6" />
    </svg>
   Cadastrar Empresa
  </a>
 </div>

@if(Empresas is null){
 <p>Carregando dados...</p>
}
else{
   <table class="cef-table"> 
   <thead>
     <tr class="cef-table-row-th">
      <th class="px-4 py-3">Nome</th>
      <th class="px-4 py-3">Endereço</th>
      <th class="px-4 py-3">Telefone</th>
      <th class="px-4 py-3">E-mail</th>
      <th class="px-4 py-3"></th>
     </tr>
   </thead>  
   <tbody>
    @foreach (var empresa in Empresas)
    {
      <tr class="cef-table-row">
        <td class="px-4 py-3">@empresa.NomeFantasia</td>
        <td class="px-4 py-3">@empresa.Endereco</td>
        <td class="px-4 py-3">@empresa.Telefone</td>
        <td class="px-4 py-3">@empresa.Email</td>
        <td class="px-4 py-3">
          @* Botão Editar *@
           <button class="cef-edit-button" @onclick="() => EditarEmpresa(empresa.Id)">
             <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none"    viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
             <path stroke-linecap="round" stroke-linejoin="round" d="M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z" />
             </svg>
           </button>

          @* Botão de Exlcuir *@
            <button class="cef-remove-button" @onclick="() => ExcluirEmpresa(empresa.Id)">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
              <path stroke-linecap="round" stroke-linejoin="round" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
              </svg>
            </button>  
        </td>
      </tr>
    }   
   </tbody>  
 </table>
}
@code{
  public List<EmpresaResponseDto> Empresas { get; set; }

@*Colocar aqui dentro(tem que ser escrito dessa forma o método)
tudo que eu quiser que seja executado no momento que o componente(ou página)
for exibida pela primeira vez*@

  protected override async Task OnInitializedAsync()
  {

   Empresas = await Http.GetFromJsonAsync<List<EmpresaResponseDto>>("/empresas");

  }

  private void EditarEmpresa(int id){
    @* Navegar para o formulario de edição *@
    Navigation.NavigateTo($"/empresa/atualizada/{id}");
  }

  private async Task ExcluirEmpresa(int id){
 
    bool excluir = await JavaScript.InvokeAsync<bool>("confirm","Você irá excluir os dados da empresa, certeza que deseja fazer isso?");

    if(excluir){

       @* Mandando a requisição de deletar para API *@
       await Http.DeleteAsync($"/empresas/{id}");

       @* Removendo da lista que exibe na tela principal *@
       Empresas.RemoveAll(empresa => empresa.Id == id); 
    }
  }
}